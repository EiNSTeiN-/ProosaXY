# Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# slic3r-based example:
#    PRINT_START TOOL=[current_extruder] BED_TEMP={first_layer_bed_temperature[current_extruder]} TOOL_TEMP=[first_layer_temperature] TOOL_IDLE_TEMP={idle_temperature[current_extruder]}

[gcode_macro PRINT_START]
gcode:
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion

    BED_MESH_CLEAR

    STATUS_HEATING

    # set temperatures without waiting
    RESPOND TYPE=command MSG='Setting temperatures'
    M104 S150 T{ params.TOOL }
    M140 S{ params.BED_TEMP }

    # set nozzle diameter for new active tool
    {% if params.NOZZLE is defined and params.NOZZLE != "" %}
      RESPOND TYPE=command MSG='Nozzle diameter provided for tool { params.TOOL }: { params.NOZZLE }mm'
      CHANGE_NOZZLE NOZZLE_DIAMETER={ params.NOZZLE }

      SET_EXTRUDER_PA TOOL=-1 EXTRUDER={ params.TOOL } NOZZLE=0.60 ADVANCE=0.035
    {% endif %}

    # wait for tool probing temp and bed temp to be reached before homing and QGL
    RESPOND TYPE=command MSG='Waiting for probing temperatures to be reached...'
    M190 S{ params.BED_TEMP }
    M109 S150 T{ params.TOOL }

    G32                            ; home all axes
    G90                            ; absolute positioning

    # bed mesh
    RESPOND TYPE=command MSG='Generating mesh...'
    BED_MESH_CALIBRATE

    # wait for hotend to reach its printing temperature
    RESPOND TYPE=command MSG='Waiting for printing temperatures to be reached...'
    M109 S{ params.TOOL_TEMP } T{ params.TOOL }

    RESPOND TYPE=command MSG='Enabling filament sensor for tool { params.TOOL }...'
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

    # SET_FAN_SPEED FAN=Nevermore SPEED=1 ; enable enclosure filter
    STATUS_PRINTING

    LINE_PURGE
